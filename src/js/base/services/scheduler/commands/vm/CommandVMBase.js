/// FOURJS_START_COPYRIGHT(D,2023)
/// Property of Four Js*
/// (c) Copyright Four Js 2023, 2024. All Rights Reserved.
/// * Trademark of Four Js Development Tools Europe Ltd
///   in the United States and elsewhere
///
/// This file can be modified by licensees according to the
/// product manual.
/// FOURJS_END_COPYRIGHT

"use strict";

modulum('CommandVMBase', ['CommandBase'],
  /**
   * @param {gbc} context
   * @param {classes} cls
   */
  function(context, cls) {
    /**
     * VM commands base class.
     * @class CommandVMBase
     * @memberOf classes
     * @extends classes.CommandBase
     */
    cls.CommandVMBase = context.oo.Class(cls.CommandBase, function($super) {
      return /** @lends classes.CommandVMBase.prototype */ {
        __name: "CommandVMBase",

        /** @type boolean */
        __virtual: true,

        /** @type boolean */
        _needsVmSync: false,

        /** @type classes.VMEventBase[] */
        _vmEvents: null,

        /**
         * @constructs
         * @param {classes.VMApplication} app owner
         * @param {classes.NodeBase} node linked AUI node
         */
        constructor: function(app, node) {
          $super.constructor.call(this, app, node);
        },

        /**
         * @inheritDoc
         */
        needsVmSync: function() {
          return this._needsVmSync;
        },

        /** Sets if command needs a synchronisation, if yes scheduler will wait to send next commands until this commands VM responds
         * @param {boolean} b - needs vm sync ?
         */
        setNeedsVmSync: function(b) {
          this._needsVmSync = b;
        },

        /**
         * @inheritDoc
         */
        executeImmediately() {
          return this.needsVmSync();
        },

        /**
         * Returns VM events generated by this command and to be sent to VM
         * @returns {classes.VMEventBase[]}
         */
        getVMEvents() {
          return this._vmEvents;
        }
      };
    });
  }
);
